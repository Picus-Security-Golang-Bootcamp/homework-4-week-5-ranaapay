swagger: "2.0"
info:
  description: "This is a sample server Book - Author server. "
  version: "1.0.0"
  title: "Swagger Book - Author API"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "bookauthor.swagger.io"
basePath: "/v1"
tags:
  - name: "book"
    description: "Operations about book"
  - name: "author"
    description: "Operations about author"
schemes:
  - "http"
paths:
  /book/{id}:
    get:
      tags:
        - "book"
      summary: "Find book by ID"
      description: "For valid response try integer IDs with value >= 1.         Other values will generated exceptions"
      operationId: "getBookById"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of book that needs to be fetched"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResponseType"
        "400":
          description: "Invalid ID supplied"
          schema:
            $ref: "#/definitions/ResponseType"
        "404":
          description: "Book not found"
          schema:
            $ref: "#/definitions/ResponseType"
    put:
      tags:
        - "book"
      summary: "Update book by ID"
      description: "For valid response try integer IDs with value >= 1.         Other values will generated exceptions"
      operationId: "updateBookById"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of book that needs to be fetched"
          required: true
          type: "integer"
          format: "int64"
        - in: "body"
          name: "body"
          description: "Update book object"
          required: true
          schema:
            $ref: "#/definitions/BookRequest"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResponseType"
        "400":
          description: "Invalid ID supplied"
          schema:
            $ref: "#/definitions/ResponseType"
        "404":
          description: "Book not found"
          schema:
            $ref: "#/definitions/ResponseType"
    delete:
      tags:
        - "book"
      summary: "Delete book by ID"
      description: "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors"
      operationId: "deleteBook"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of the book that needs to be deleted"
          required: true
          type: "integer"
          minimum: 1.0
          format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResponseType"
        "400":
          description: "Invalid ID supplied"
          schema:
            $ref: "#/definitions/ResponseType"
        "404":
          description: "Book not found"
          schema:
            $ref: "#/definitions/ResponseType"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/ResponseType"
  /book:
    post:
      tags:
        - "book"
      summary: "Create book"
      operationId: "createBook"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Create book object"
          required: true
          schema:
            $ref: "#/definitions/BookRequest"
      responses:
        "201":
          description: "Successfully Created"
          schema:
            $ref: "#/definitions/ResponseType"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/ResponseType"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/ResponseType"
  /author/{id}:
    get:
      tags:
        - "author"
      summary: "Find author by ID"
      description: "For valid response try integer IDs with value >= 1.         Other values will generated exceptions"
      operationId: "getAuthorById"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of author that needs to be fetched"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResponseType"
        "400":
          description: "Invalid ID supplied"
          schema:
            $ref: "#/definitions/ResponseType"
        "404":
          description: "Book not found"
          schema:
            $ref: "#/definitions/ResponseType"
    put:
      tags:
        - "author"
      summary: "Update author by ID"
      description: "For valid response try integer IDs with value >= 1.         Other values will generated exceptions"
      operationId: "updateAuthorById"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of author that needs to be fetched"
          required: true
          type: "integer"
          format: "int64"
        - in: "body"
          name: "body"
          description: "Update author object"
          required: true
          schema:
            $ref: "#/definitions/AuthorRequest"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResponseType"
        "400":
          description: "Invalid ID supplied"
          schema:
            $ref: "#/definitions/ResponseType"
        "404":
          description: "Author not found"
          schema:
            $ref: "#/definitions/ResponseType"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/ResponseType"
    delete:
      tags:
        - "author"
      summary: "Delete author by ID"
      description: "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors"
      operationId: "deleteAuthor"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of the author that needs to be deleted"
          required: true
          type: "integer"
          minimum: 1.0
          format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResponseType"
        "400":
          description: "Invalid ID supplied"
          schema:
            $ref: "#/definitions/ResponseType"
        "404":
          description: "Author not found"
          schema:
            $ref: "#/definitions/ResponseType"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/ResponseType"
  /author:
    post:
      tags:
        - "author"
      summary: "Create author"
      operationId: "createAuthor"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Create author object"
          required: true
          schema:
            $ref: "#/definitions/AuthorRequest"
      responses:
        "201":
          description: "Successfully Created"
          schema:
            $ref: "#/definitions/ResponseType"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/ResponseType"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/ResponseType"
  /author/{id}/books:
    get:
      tags:
        - "author"
      summary: "Find author by ID with its books"
      description: "For valid response try integer IDs with value >= 1.         Other values will generated exceptions"
      operationId: "getAuthorByIdWithBooks"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of author that needs to be fetched"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResponseType"
        "400":
          description: "Invalid ID supplied"
          schema:
            $ref: "#/definitions/ResponseType"
        "404":
          description: "Book not found"
          schema:
            $ref: "#/definitions/ResponseType"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/ResponseType"
definitions:
  BookRequest:
    type: "object"
    required:
      - "name"
      - "authorId"
      - "price"
      - "publishTime"
      - "isbn"
      - "pageNumber"
      - "stockCode"
      - "stockNumber"
    properties:
      name:
        type: "string"
      authorId:
        type: "integer"
        format: "uint64"
      price:
        type: "string"
      publishTime:
        type: "string"
      isbn:
        type: "string"
      pageNumber:
        type: "integer"
        format: "int64"
      stockCode:
        type: "string"
      stockNumber:
        type:  "integer"
        format: "int64"
  AuthorRequest:
    type: "object"
    required:
      - "firstName"
      - "lastName"
      - "email"
      - "gender"
    properties:
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      gender:
        type: "string"
  ResponseType:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int64"
      message:
        type: "object"